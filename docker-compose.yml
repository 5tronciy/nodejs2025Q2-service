version: '3.8'

services:
  postgres:
    image: postgres:15.4-alpine
    container_name: home_library_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}  
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    networks:
      - home_library_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: home_library_app
    environment:
      PORT: ${PORT}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NODE_ENV: production
    ports:
      - "${PORT}:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - home_library_network
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:4000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development override for hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: home_library_app_dev
    environment:
      PORT: ${PORT}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NODE_ENV: development
    ports:
      - "${PORT}:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - home_library_network
    restart: unless-stopped
    volumes:
      - ./src:/app/src:ro
      - /app/node_modules
    profiles:
      - dev

networks:
  home_library_network:
    driver: bridge
    name: home_library_network

volumes:
  postgres_data:
    driver: local
  postgres_logs:
    driver: local
  app_logs:
    driver: local